name: CI

on:
  push:
    branches: ["main"]

jobs:
  cleanup-deployments:
    name: Cleanup Deployment History
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Cleanup deployments
        uses: strumwolf/delete-deployment-environment@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: production
          onlyRemoveDeployments: true

  build-frontend:
    name: Build & Push Frontend Image
    runs-on: ubuntu-latest
    environment: production
    needs: ["cleanup-deployments"]

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        uses: docker/bake-action@v6
        env:
          CF_SITEKEY: ${{ vars.CF_SITEKEY }}
          GRAPHQL_GITHUB_API_TOKEN: ${{ secrets.GRAPHQL_GITHUB_API_TOKEN }}
        with:
          files: |
            docker-bake.hcl
            docker-bake.prod.hcl
          push: true
          no-cache: true
          targets: frontend

  build-backend:
    name: Build & Push Backend Image
    runs-on: ubuntu-latest
    environment: production
    needs: ["cleanup-deployments"]

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        uses: docker/bake-action@v6
        env:
          GRAPHQL_GITHUB_API_TOKEN: ${{ secrets.GRAPHQL_GITHUB_API_TOKEN }}
        with:
          files: |
            docker-bake.hcl
            docker-bake.prod.hcl
          push: true
          no-cache: true
          targets: backend

  deploy:
    name: Deploy Stack
    runs-on: ubuntu-latest
    environment: production
    needs: [build-frontend, build-backend]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy stack
        uses: ibiixie/stack-deploy-action@feature/multiple-compose-inputs
        with:
          host: ${{ secrets.REMOTE_HOST }}
          user: ${{ vars.REMOTE_USER }}
          ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}
          file: ./compose.yaml;./compose.prod.yaml
          name: biixie-website
          mode: compose
        env:
          CF_TURNSTILE_SECRET: ${{ secrets.CF_TURNSTILE_SECRET }}
          KVP_REDACTED_TERMS: ${{ secrets.REDACTED_TERMS }}

  purge-cache:
    name: Purge Cloudflare Cache
    runs-on: ubuntu-latest
    environment: production
    needs: ["deploy"]

    steps:
      - name: Purge cache
        uses: nathanvaughn/actions-cloudflare-purge@v3.1.0
        with:
          cf_zone: ${{ secrets.CLOUDFLARE_ZONE }}
          cf_auth: ${{ secrets.CLOUDFLARE_AUTH_KEY }}
